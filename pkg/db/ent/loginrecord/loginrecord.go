// Code generated by entc, DO NOT EDIT.

package loginrecord

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the loginrecord type in the database.
	Label = "login_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldLoginTime holds the string denoting the login_time field in the database.
	FieldLoginTime = "login_time"
	// FieldIP holds the string denoting the ip field in the database.
	FieldIP = "ip"
	// FieldLocation holds the string denoting the location field in the database.
	FieldLocation = "location"
	// FieldLat holds the string denoting the lat field in the database.
	FieldLat = "lat"
	// FieldLon holds the string denoting the lon field in the database.
	FieldLon = "lon"
	// FieldTimezone holds the string denoting the timezone field in the database.
	FieldTimezone = "timezone"
	// Table holds the table name of the loginrecord in the database.
	Table = "login_records"
)

// Columns holds all SQL columns for loginrecord fields.
var Columns = []string{
	FieldID,
	FieldUserID,
	FieldAppID,
	FieldLoginTime,
	FieldIP,
	FieldLocation,
	FieldLat,
	FieldLon,
	FieldTimezone,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultLoginTime holds the default value on creation for the "login_time" field.
	DefaultLoginTime func() uint32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
